version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: hello-siling-postgres
    environment:
      POSTGRES_DB: legal_docs_dev
      POSTGRES_USER: legal_user
      POSTGRES_PASSWORD: legal_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U legal_user -d legal_docs_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: hello-siling-minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Redpanda (Kafka 兼容)
  redpanda:
    image: redpandadata/redpanda:latest
    container_name: hello-siling-redpanda
    ports:
      - "9092:9092"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    command:
      - redpanda
      - start
      - --kafka-addr
      - internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr
      - internal://redpanda:9092,external://localhost:9092
      - --pandaproxy-addr
      - internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr
      - internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr
      - internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr
      - redpanda:33145
      - --advertise-rpc-addr
      - redpanda:33145
      - --smp
      - '1'
      - --memory
      - 1G
      - --mode
      - dev-container
      - --default-log-level=info
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # 后端服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: hello-siling-backend
    ports:
      - "8001:8001"
    env_file:
      - env.template
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - APP_HOST=0.0.0.0
      - APP_PORT=8001
      - RELOAD_MODE=false
      - DATABASE_URL=postgresql://legal_user:legal_password_123@postgres:5432/legal_docs_dev
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password123
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - KAFKA_TOPIC_PREFIX=legal
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 前端服务
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        - VITE_BACKEND_HOST=${VITE_BACKEND_HOST}
        - VITE_BACKEND_PORT=${VITE_BACKEND_PORT}
        - VITE_BACKEND_PROTOCOL=${VITE_BACKEND_PROTOCOL}
    container_name: hello-siling-frontend
    ports:
      - "3000:3000"
    env_file:
      - env.template
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  minio_data:
  redpanda_data:
